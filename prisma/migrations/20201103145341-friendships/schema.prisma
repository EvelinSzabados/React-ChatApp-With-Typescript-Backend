datasource db {
    provider = "postgresql"
    url = "***"
}

generator client {
    provider = "prisma-client-js"
}

model chats {
    id          Int        @id @default(autoincrement())
    lastUpdated DateTime   @default(now())
    users       users[]    @relation(name : "ChatUsers")
    messages    messages[] 
}

model messages {
    id       Int    @id @default(autoincrement())
    sender   users  @relation(fields: [senderId], references: [id])
    senderId Int
    text     String
    chat     chats? @relation(fields: [chatId], references: [id])
    chatId   Int?
}

model statuses {
    id         Int     @id @default(autoincrement())
    statusName String
    user       users[]
}

model users {
    id                Int      @id @default(autoincrement())
    displayName       String
    email             String   @unique
    password          String
    profilePictureUrl String
    status            statuses @relation(fields: [statusId], references: [id])
    chats     chats[]     @relation(name: "ChatUsers")
    message  messages[]
    statusId Int
    friendships friendShips[]
    friendshipRequestsSent friendShipRequest[] @relation(name: "FriendshipRequestsSentRelation")
    friendshipRequestsReceived friendShipRequest[] @relation(name: "FriendshipRequestsReceivedRelation")
   
}

model friendShips{
    id Int @id @default(autoincrement())
    users users[]
}

model friendShipRequest {
        id Int @id @default(autoincrement())
        from users @relation(name: "FriendshipRequestsSentRelation")
        to users @relation(name: "FriendshipRequestsReceivedRelation")
        status friendShipRequestStatus @default(value: PENDING)
}

enum friendShipRequestStatus {
        PENDING
        ACCEPTED
        REJECTED
}
